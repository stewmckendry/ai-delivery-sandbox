{
  "tools": [
    {
      "tool_id": "inputChecker",
      "description": "Validate user inputs against required metadata and completeness",
      "input_schema": {
        "type": "object",
        "properties": {
          "gate_id": { "type": "integer" },
          "artifact_id": { "type": "string" },
          "section_id": { "type": "string" },
          "inputs": {
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["gate_id", "artifact_id", "section_id", "inputs"]
      }
    },
    {
      "tool_id": "inputPromptGenerator",
      "description": "Generate structured input prompts based on gate metadata",
      "input_schema": {
        "type": "object",
        "properties": {
          "gate_id": { "type": "integer" },
          "artifact_id": { "type": "string" },
          "section_id": { "type": "string" }
        },
        "required": ["gate_id", "artifact_id", "section_id"]
      }
    },
    {
      "tool_id": "createSessionSnapshot",
      "description": "Generate a YAML snapshot of all PromptLog entries for a session, used by planner for grounding and replay.",
      "input_schema": {
        "type": "object",
        "properties": {
          "session_id": {
            "type": "string",
            "description": "Optional session ID to filter which prompt logs to include"
          }
        },
        "required": []
      }
    },
    {
      "tool_id": "uploadTextInput",
      "description": "Ingest freeform text input into the memory system",
      "input_schema": {
        "type": "object",
        "properties": {
          "text": { "type": "string" },
          "metadata": {
            "type": "object",
            "properties": {
              "gate_id": { "type": "integer" },
              "artifact_id": { "type": "string" },
              "section_id": { "type": "string" },
              "intent": { "type": "string" },
              "session_id": { "type": "string" },
              "user_id": { "type": "string" }
            }
          },
          "log_usage": { "type": "boolean", "description": "Optional. Skip logging if chained." }
        },
        "required": ["text"]
      }
    },
    {
      "tool_id": "uploadFileInput",
      "description": "Extract and ingest file contents into the memory system",
      "input_schema": {
        "type": "object",
        "properties": {
          "file_path": { "type": "string" },
          "file_content": { "type": "string" },
          "metadata": {
            "type": "object",
            "properties": {
              "gate_id": { "type": "integer" },
              "artifact_id": { "type": "string" },
              "section_id": { "type": "string" },
              "intent": { "type": "string" },
              "session_id": { "type": "string" },
              "user_id": { "type": "string" }
            }
          },
          "log_usage": { "type": "boolean", "description": "Optional. Skip logging if chained." }
        },
        "anyOf": [
          { "required": ["file_path"] },
          { "required": ["file_content"] }
        ]
      }
    },
    {
      "tool_id": "uploadLinkInput",
      "description": "Scrape and ingest webpage content into the memory system",
      "input_schema": {
        "type": "object",
        "properties": {
          "url": { "type": "string" },
          "metadata": {
            "type": "object",
            "properties": {
              "gate_id": { "type": "integer" },
              "artifact_id": { "type": "string" },
              "section_id": { "type": "string" },
              "intent": { "type": "string" },
              "session_id": { "type": "string" },
              "user_id": { "type": "string" }
            }
          },
          "log_usage": { "type": "boolean", "description": "Optional. Skip logging if chained." }
        },
        "required": ["url"]
      }
    },
    {
      "tool_id": "loadCorpus",
      "description": "Embeds and indexes documents into KB",
      "input_schema": {
        "type": "object",
        "properties": {
          "file_contents": { "type": "string" },
          "file_name": { "type": "string" },
          "metadata": {
            "type": "object",
            "properties": {
              "gate_id": { "type": "integer" },
              "artifact_id": { "type": "string" },
              "section_id": { "type": "string" },
              "intent": { "type": "string" },
              "session_id": { "type": "string" },
              "user_id": { "type": "string" }
            }
          }
        },
        "required": ["file_contents"]
      }
    },
    {
      "tool_id": "queryCorpus",
      "description": "Queries a vector-embedded document corpus for alignment",
      "input_schema": {
        "type": "object",
        "properties": {
          "query": { "type": "string" }
        },
        "required": ["query"]
      }
    },
    {
      "tool_id": "memory_retrieve",
      "description": "Retrieves relevant PromptLog entries for a given artifact and section",
      "input_schema": {
        "type": "object",
        "properties": {
          "artifact_id": { "type": "string" },
          "session_id": { "type": "string" },
          "user_id": { "type": "string" }
        },
        "required": ["artifact_id", "section_id"]
      }
    },
    {
      "tool_id": "loadSectionMetadata",
      "description": "Loads and sorts drafted artifact sections for a given gate and artifact",
      "input_schema": {
        "type": "object",
        "properties": {
          "artifact_id": { "type": "string" },
          "gate_id": { "type": "string" }
        },
        "required": ["artifact_id", "gate_id"]
      }
    },
    {
      "tool_id": "formatSection",
      "description": "Formats a section using a Jinja Markdown template",
      "input_schema": {
        "type": "object",
        "properties": {
          "section_id": { "type": "string" },
          "section_text": { "type": "string" },
          "template_url": { "type": "string" }
        },
        "required": ["section_id", "section_text", "template_url"]
      }
    },
    {
      "tool_id": "mergeSections",
      "description": "Merges formatted sections into a complete markdown body",
      "input_schema": {
        "type": "object",
        "properties": {
          "sections": {
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["sections"]
      }
    },
    {
      "tool_id": "finalizeDocument",
      "description": "Adds title, metadata, and table of contents to a markdown document",
      "input_schema": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "document_body": { "type": "string" },
          "version": { "type": "string" },
          "artifact_id": { "type": "string" },
          "gate_id": { "type": "string" }
        },
        "required": ["title", "document_body", "version", "artifact_id", "gate_id"]
      }
    },
    {
      "tool_id": "commitArtifact",
      "description": "Saves finalized document locally and logs output location",
      "input_schema": {
        "type": "object",
        "properties": {
          "final_markdown": { "type": "string" },
          "artifact_id": { "type": "string" },
          "gate_id": { "type": "string" },
          "version": { "type": "string" },
          "title": { "type": "string" }
        },
        "required": ["final_markdown", "artifact_id", "gate_id", "version", "title"]
      }
    },
    {
      "tool_id": "storeToDrive",
      "description": "Uploads finalized document as PDF to Google Drive and logs the output link",
      "input_schema": {
        "type": "object",
        "properties": {
          "final_markdown": { "type": "string" },
          "artifact_id": { "type": "string" },
          "gate_id": { "type": "string" },
          "version": { "type": "string" },
          "title": { "type": "string" }
        },
        "required": ["final_markdown", "artifact_id", "gate_id", "version", "title"]
      }
    },
    {
      "tool_id": "fetchFromDrive",
      "description": "Retrieves the uploaded PDF from Drive by gate ID, artifact ID, and version",
      "input_schema": {
        "type": "object",
        "properties": {
          "artifact_id": { "type": "string" },
          "gate_id": { "type": "string" },
          "version": { "type": "string" }
        },
        "required": ["artifact_id", "gate_id", "version"]
      }
    },
    {
      "tool_id": "confirmProjectProfile",
      "description": "Loads and returns a saved project profile by project ID for GPT or human confirmation",
      "input_schema": {
        "type": "object",
        "properties": {
          "project_id": { "type": "string" }
        },
        "required": ["project_id"]
      }
    },
    {
      "tool_id": "ingestInput",
      "description": "Ingests content from user text, file, or URL and generates or updates the associated project profile.",
      "input_schema": {
        "type": "object",
        "properties": {
          "input_method": {
            "type": "string",
            "enum": ["text", "file", "link"],
            "description": "Indicates which upload method to use"
          },
          "text": { "type": "string" },
          "file_path": { "type": "string" },
          "file_content": { "type": "string" },
          "url": { "type": "string" },
          "metadata": {
            "type": "object",
            "properties": {
              "gate_id": { "type": "integer" },
              "artifact_id": { "type": "string" },
              "section_id": { "type": "string" },
              "intent": { "type": "string" },
              "session_id": { "type": "string" },
              "user_id": { "type": "string" },
              "project_id": { "type": "string" }
            },
            "required": ["artifact_id"]
          }
        },
        "required": ["input_method", "metadata"],
        "oneOf": [
          { "required": ["text"] },
          { "required": ["file_path"] },
          { "required": ["file_content"] },
          { "required": ["url"] }
        ]
      }
    },
    {
      "tool_id": "generateSectionChain",
      "description": "Generates a draft section by retrieving memory, synthesizing, and refining text.",
      "input_schema": {
        "type": "object",
        "properties": {
          "artifact": { "type": "string" },
          "section": { "type": "string" },
          "gate_id": { "type": "string" },
          "session_id": { "type": "string" },
          "user_id": { "type": "string" },
          "project_id": { "type": "string" }
        },
        "required": ["artifact", "section"]
      }
    },
    {
      "tool_id": "assembleArtifactChain",
      "description": "Loads section metadata, formats and merges content, finalizes a document, and saves it to Drive.",
      "input_schema": {
        "type": "object",
        "properties": {
          "artifact_id": { "type": "string" },
          "gate_id": { "type": "string" },
          "version": { "type": "string" },
          "project_id": { "type": "string" }
        },
        "required": ["artifact_id", "gate_id"]
      }
    },
    {
      "tool_id": "webSearch",
      "description": "Performs external web or domain-specific search and returns formatted summaries",
      "input_schema": {
        "type": "object",
        "properties": {
          "query": { "type": "string" },
          "search_type": { "type": "string" },
          "context": { "type": "object" }
        },
        "required": ["query", "search_type"]
      }
    },
        {
      "tool_id": "goc_alignment_search",
      "description": "Performs government policy alignment search scoped to .gc.ca domains and returns structured results",
      "input_schema": {
        "type": "object",
        "properties": {
          "query": { "type": "string" },
          "context": { "type": "object" }
        },
        "required": ["query"]
      }
    },
    {
      "tool_id": "queryPromptGenerator",
      "description": "Generates a semantically rich natural language query from project profile and memory",
      "input_schema": {
        "type": "object",
        "properties": {
          "project_profile": { "type": "object" },
          "memory": { "type": "array" }
        },
        "required": ["project_profile", "memory"]
      }
    },
    {
      "tool_id": "feedback_mapper",
      "description": "Maps feedback text to the most relevant document section IDs and determines the type of revision required.",
      "input_schema": {
        "type": "object",
        "properties": {
          "feedback_text": { "type": "string" },
          "artifact": { "type": "string" },
          "project_id": { "type": "string" }
        },
        "required": ["feedback_text"]
      }
    },
    {
      "tool_id": "section_rewriter",
      "description": "Rewrites a section based on the revision type and feedback using prompt templates and LLM output.",
      "input_schema": {
        "type": "object",
        "properties": {
          "section_id": { "type": "string" },
          "feedback": { "type": "string" },
          "revision_type": { "type": "string" },
          "current_text": { "type": "string" }
        },
        "required": ["section_id", "feedback", "revision_type", "current_text"]
      }
    },
    {
      "tool_id": "manualEditSync",
      "description": "Saves a section that was edited manually or pasted by a user, without transformation.",
      "input_schema": {
        "type": "object",
        "properties": {
          "section_id": { "type": "string" },
          "artifact": { "type": "string" },
          "gate_id": { "type": "string" },
          "text": { "type": "string" }
        },
        "required": ["section_id", "text"]
      }
    },
    {
      "tool_id": "feedback_preprocessor",
      "description": "Cleans and normalizes feedback text, and optionally splits into smaller actionable feedback items.",
      "input_schema": {
        "type": "object",
        "properties": {
          "feedback_text": { "type": "string" }
        },
        "required": ["feedback_text"]
      }
    },
    {
      "tool_id": "revision_checker",
      "description": "Compares original and revised section content to detect excessive or unintended changes based on revision type.",
      "input_schema": {
        "type": "object",
        "properties": {
          "original_text": { "type": "string" },
          "revised_text": { "type": "string" },
          "revision_type": { "type": "string" }
        },
        "required": ["original_text", "revised_text", "revision_type"]
      }
    },
    {
      "tool_id": "refine_document_chain",
      "description": "Refines and polishes an assembled document using LLM with token-aware strategies and trace persistence.",
      "input_schema": {
        "type": "object",
        "properties": {
          "document_text": { "type": "string" },
          "artifact_id": { "type": "string" },
          "project_id": { "type": "string" },
          "user_id": { "type": "string" },
          "section_ids": {
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["document_text", "artifact_id", "project_id", "user_id", "section_ids"]
      }
    },
    {
      "tool_id": "generate_full_artifact_chain",
      "description": "Generates a complete artifact by running all section-level tools and applying full document refinement.",
      "input_schema": {
        "type": "object",
        "properties": {
          "artifact_id": { "type": "string" },
          "project_id": { "type": "string" },
          "user_id": { "type": "string" }
        },
        "required": ["artifact_id", "project_id", "user_id"]
      }
    },
    {
      "tool_id": "query_prompt_generator",
      "description": "Creates rich search queries from memory and project profile to guide document generation.",
      "input_schema": {
        "type": "object",
        "properties": {
          "project_profile": { "type": "object" },
          "memory": {
            "type": "array",
            "items": { "type": "object" }
          }
        },
        "required": ["project_profile", "memory"]
      }
    },
    {
      "tool_id": "section_synthesizer",
      "description": "Generates an initial draft of a policy section using inputs such as memory and alignment results.",
      "input_schema": {
        "type": "object",
        "properties": {
          "memory": {
            "type": "array",
            "items": { "type": "object" }
          },
          "alignment_results": {
            "type": "array",
            "items": { "type": "object" }
          },
          "web_search": { "type": "string" },
          "corpus_answer": { "type": "object" },
          "project_profile": { "type": "object" },
          "artifact": { "type": "string" },
          "section": { "type": "string" }
        },
        "required": ["memory", "artifact", "section"]
      }
    },
    {
      "tool_id": "section_refiner",
      "description": "Improves tone and polish of a policy draft section.",
      "input_schema": {
        "type": "object",
        "properties": {
          "raw_draft": { "type": "string" }
        },
        "required": ["raw_draft"]
      }
    },
    {
      "tool_id": "generate_artifact_chain",
      "description": "Generates all sections for an artifact using shared global context, then assembles into a complete document.",
      "input_schema": {
        "type": "object",
        "properties": {
          "gate_id": { "type": "integer" },
          "artifact": { "type": "string" },
          "session_id": { "type": "string" },
          "user_id": { "type": "string" },
          "project_id": { "type": "string" }
        },
        "required": ["gate_id", "artifact", "session_id", "user_id", "project_id"]
      }
    },
    {
      "tool_id": "generate_global_context_chain",
      "description": "Run corpus + web + GoC alignment searches and log context for use in downstream drafting tools",
      "input_schema": {
        "type": "object",
        "properties": {
          "session_id": { "type": "string" },
          "user_id": { "type": "string" },
          "project_id": { "type": "string" },
          "artifact_id": { "type": "string" },
          "search_filter": {
            "type": "object",
            "description": "Optional filters for tailoring web search (e.g., jurisdiction, topics)"
          }
        },
        "required": ["session_id", "user_id", "project_id", "artifact_id"]
      }
    },
    {
      "tool_id": "fetch_artifact_chunk",
      "description": "Fetch a specific chunk of an artifact from Redis storage for streaming to the user or GPT",
      "input_schema": {
        "type": "object",
        "properties": {
          "session_id": { "type": "string" },
          "chunk_id": { "type": "string" }
        },
        "required": ["session_id", "chunk_id"]
      }
    },
    {
      "tool_id": "save_artifact_chunks",
      "description": "Chunk and save an artifact to Redis using token thresholds for LLM-safe streaming",
      "input_schema": {
        "type": "object",
        "properties": {
          "session_id": { "type": "string" },
          "artifact_id": { "type": "string" },
          "gate_id": { "type": "string" },
          "max_token": {
            "type": "integer",
            "default": 1500,
            "description": "Optional override for max token size per chunk"
          }
        },
        "required": ["session_id", "artifact_id", "gate_id"]
      }
    },
    {
      "tool_id": "diff_summarizer",
      "description": "Generate a natural language summary of the difference between an original and revised text",
      "input_schema": {
        "type": "object",
        "properties": {
          "original": { "type": "string" },
          "revised": { "type": "string" }
        },
        "required": ["original", "revised"]
      }
    },
    {
      "tool_id": "section_review_fetcher",
      "description": "Retrieve section revision text and diff summary from Redis for a specific section",
      "input_schema": {
        "type": "object",
        "properties": {
          "session_id": { "type": "string" },
          "project_id": { "type": "string" },
          "artifact_id": { "type": "string" },
          "section_id": { "type": "string" }
        },
        "required": ["session_id", "project_id", "artifact_id", "section_id"]
      }
    },
    {
      "tool_id": "feedback_structurer",
      "description": "Structure and map multiple user feedback entries to appropriate sections and revision types",
      "input_schema": {
        "type": "object",
        "properties": {
          "feedback_entries": {
            "type": "array",
            "items": { "type": "string" }
          },
          "sections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "section_id": { "type": "string" },
                "text": { "type": "string" }
              }
            }
          }
        },
        "required": ["feedback_entries", "sections"]
      }
    },
    {
      "tool_id": "revise_section_chain",
      "description": "Revise one or more artifact sections based on user feedback, memory context, and structured feedback mapping.",
      "input_schema": {
        "type": "object",
        "properties": {
          "session_id": { "type": "string" },
          "artifact": { "type": "string" },
          "gate_id": { "type": "string" },
          "user_id": { "type": "string" },
          "project_id": { "type": "string" },
          "feedback_entries": {
            "type": "array",
            "description": "Array of user feedback entries to revise sections",
            "items": {
              "type": "object",
              "properties": {
                "text": { "type": "string" },
                "section_id": { "type": "string" },
                "type": { "type": "string" }
              }
            }
          }
        },
        "required": ["session_id", "artifact", "feedback_entries", "user_id", "project_id"]
      }
    }
  ]
}