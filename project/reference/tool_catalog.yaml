tools:
  uploadTextInput:
    description: Ingest freeform text input into the memory system
    module: app.tools.tool_wrappers.uploadTextInput
    class: Tool
    schema:
      type: object
      properties:
        text:
          type: string
        metadata:
          type: object
          properties:
            gate_id:
              type: integer
            artifact_id:
              type: string
            section_id:
              type: string
            intent:
              type: string
            session_id:
              type: string
            user_id:
              type: string
        log_usage:
          type: boolean
          description: Optional. If false, tool usage logging will be skipped (used when chained).
      required:
        - text
  uploadFileInput:
    description: Extract and ingest file contents into the memory system
    module: app.tools.tool_wrappers.uploadFileInput
    class: Tool
    schema:
      type: object
      properties:
        file_path:
          type: string
        file_content:
          type: string
        metadata:
          type: object
          properties:
            gate_id:
              type: integer
            artifact_id:
              type: string
            section_id:
              type: string
            intent:
              type: string
            session_id:
              type: string
            user_id:
              type: string
        log_usage:
          type: boolean
          description: Optional. If false, tool usage logging will be skipped (used when chained).
      anyOf:
        - required: ["file_path"]
        - required: ["file_content"]
  uploadLinkInput:
    description: Scrape and ingest webpage content into the memory system
    module: app.tools.tool_wrappers.uploadLinkInput
    class: Tool
    schema:
      type: object
      properties:
        url:
          type: string
        metadata:
          type: object
          properties:
            gate_id:
              type: integer
            artifact_id:
              type: string
            section_id:
              type: string
            intent:
              type: string
            session_id:
              type: string
            user_id:
              type: string
        log_usage:
          type: boolean
          description: Optional. If false, tool usage logging will be skipped (used when chained).
      required:
        - url
  uploadReferenceDocument:
    module: app.tools.tool_wrappers.loadCorpus
    class: Tool
    description: Embeds and indexes documents into KB
    GPT_facing: true
    schema:
      type: object
      properties:
        file_contents:
          type: string
          description: Raw content of the file to be uploaded (optional if file_url is provided)
        file_name:
          type: string
          description: Name of the file being uploaded (optional if file_url is provided)
        file_url:
          type: string
          description: Optional URL to the file (use instead of file_contents)
        metadata:
          type: object
          additionalProperties: true
          properties:
            title:
              type: string
              description: Title of the document for citation
            source:
              type: string
              description: Source or publication origin of the document
            date:
              type: string
              format: date
              description: Date of publication or indexing in ISO format
      required: ["metadata"]

  alignWithReferenceDocuments:
    module: app.tools.tool_wrappers.queryCorpus
    class: Tool
    description: Queries uploaded reference documents to find relevant matches and summaries
    GPT_facing: true
    schema:
      type: object
      properties:
        query:
          type: string
          description: The user question or topic to match against reference documents
        session_id:
          type: string
        project_id:
          type: string
        user_id:
          type: string
        filter_titles:
          type: object
      required:
        - query
        - session_id
        - project_id

  createSessionSnapshot:
    description: Generate a YAML snapshot of all PromptLog entries for a session, used by planner for grounding and replay.
    module: app.tools.tool_wrappers.createSessionSnapshot
    class: Tool
    schema:
      type: object
      properties:
        session_id:
          type: string
          description: Optional session ID to filter which prompt logs to include
      required: []

  getArtifactRequirements:
    description: Retrieve the requirements for a specific gate and artifact, including metadata and section details.
    module: app.tools.tool_wrappers.inputPromptGenerator
    class: Tool
    GPT_facing: true
    schema:
      type: object
      properties:
        gate_id:
          type: integer
        project_id:
          type: string
      required: []

  inputChecker:
    description: Validate user inputs against required metadata and completeness
    module: app.tools.tool_wrappers.inputChecker
    class: Tool
    schema:
      type: object
      properties:
        gate_id:
          type: integer
        artifact_id:
          type: string
        section_id:
          type: string
      required:
        - gate_id
        - artifact_id
        - section_id
  memory_retrieve:
    module: app.tools.tool_wrappers.memory_retrieve
    class: Tool
    description: Retrieves relevant PromptLog entries for a given artifact and section
    schema:
      type: object
      properties:
        artifact_id:
          type: string
        session_id:
          type: string
        user_id:
          type: string
      required:
        - artifact_id
  loadSectionMetadata:
    module: app.tools.tool_wrappers.loadSectionMetadata
    class: Tool
    description: Loads and sorts drafted artifact sections for a given gate and artifact
    schema:
      type: object
      properties:
        artifact_id:
          type: string
        gate_id:
          type: string
      required:
        - artifact_id
        - gate_id
  formatSection:
    module: app.tools.tool_wrappers.formatSection
    class: Tool
    description: Formats a section using a Jinja Markdown template
    schema:
      type: object
      properties:
        section_id:
          type: string
        section_text:
          type: string
        template_url:
          type: string
      required:
        - section_id
        - section_text
        - template_url
  mergeSections:
    module: app.tools.tool_wrappers.mergeSections
    class: Tool
    description: Merges formatted sections into a complete markdown body
    schema:
      type: object
      properties:
        sections:
          type: array
          items:
            type: string
      required:
        - sections
  finalizeDocument:
    module: app.tools.tool_wrappers.finalizeDocument
    class: Tool
    description: Adds title, metadata, and table of contents to a markdown document
    schema:
      type: object
      properties:
        title:
          type: string
        document_body:
          type: string
        version:
          type: string
        artifact_id:
          type: string
        gate_id:
          type: string
      required:
        - title
        - document_body
        - version
        - artifact_id
        - gate_id
  commitArtifact:
    module: app.tools.tool_wrappers.commitArtifact
    class: Tool
    description: Saves finalized document locally and logs output location
    schema:
      type: object
      properties:
        final_markdown:
          type: string
        artifact_id:
          type: string
        gate_id:
          type: string
        version:
          type: string
        title:
          type: string
      required:
        - final_markdown
        - artifact_id
        - gate_id
        - version
        - title
  storeToDrive:
    module: app.tools.tool_wrappers.storeToDrive
    class: Tool
    description: Uploads finalized document as PDF to Google Drive and logs the output link
    schema:
      type: object
      properties:
        final_markdown:
          type: string
        artifact_id:
          type: string
        gate_id:
          type: string
        version:
          type: string
        title:
          type: string
      required:
        - final_markdown
        - artifact_id
        - gate_id
        - version
        - title
  fetchFromDrive:
    module: app.tools.tool_wrappers.fetchFromDrive
    class: Tool
    description: Retrieves the uploaded PDF from Drive by gate ID, artifact ID, and version
    schema:
      type: object
      properties:
        artifact_id:
          type: string
        gate_id:
          type: string
        version:
          type: string
      required:
        - artifact_id
        - gate_id
        - version
  confirmProjectProfile:
    module: app.tools.tool_wrappers.confirmProjectProfile
    class: Tool
    description: Loads and returns a saved project profile by project ID for GPT or human confirmation
    schema:
      type: object
      properties:
        project_id:
          type: string
      required:
        - project_id

  uploadProjectInputs:
    description: Ingests content from user text, file, or URL and generates or updates the associated project profile.
    module: app.engines.toolchains.IngestInputChain
    class: IngestInputChain
    schema:
      type: object
      properties:
        input_method:
          type: string
          enum: [text, file, link]
          description: Indicates which upload method to use
        text:
          type: string
          description: Used if input_method is 'text'
        file_path:
          type: string
          description: Path to file if input_method is 'file'
        file_content:
          type: string
          description: Alternative to file_path if uploading raw content
        url:
          type: string
          description: Used if input_method is 'link'
        metadata:
          type: object
          properties:
            gate_id:
              type: integer
            artifact_id:
              type: string
            section_id:
              type: string
            intent:
              type: string
            session_id:
              type: string
            user_id:
              type: string
            project_id:
              type: string
          required:
            - artifact_id
      required:
        - input_method
        - metadata
      oneOf:
        - required: [text]
        - required: [file_path]
        - required: [file_content]
        - required: [url]
        
  generateSectionDraft:
    description: Generates a draft section by retrieving memory, synthesizing, and refining text.
    module: app.engines.toolchains.generate_section_chain
    class: GenerateSectionChain
    schema:
      type: object
      properties:
        artifact_id: { type: string }
        section_id: { type: string }
        gate_id: { type: string }
        session_id: { type: string }
        user_id: { type: string }
        project_id: { type: string }
      required:
        - artifact_id
        - section_id
        - session_id
        - project_id
  webSearch:
    module: app.tools.tool_wrappers.web_search
    class: Tool
    description: Performs external web or domain-specific search and returns formatted summaries
    schema:
      type: object
      properties:
        query:
          type: string
        search_type:
          type: string
        search_filter:
          type: object
      required:
        - query
        - search_type
  goc_alignment_search:
    module: app.tools.tool_wrappers.goc_alignment_search
    class: Tool
    description: Performs government policy alignment search scoped to .gc.ca domains and returns structured results
    schema:
      type: object
      properties:
        query:
          type: string
        context:
          type: object
      required:
        - query

  finalizeArtifact:
    description: Finalizes an artifact by formatting and merging all approved sections, then storing it to Drive.
    module: app.engines.toolchains.assemble_artifact_chain
    class: AssembleArtifactChain
    schema:
      type: object
      properties:
        artifact_id:
          type: string
        gate_id:
          type: string
        version:
          type: string
          default: v0.1
        project_id:
          type: string
        session_id:
          type: string
      required:
        - artifact_id
        - gate_id
        - project_id
        - session_id

  feedback_mapper:
    description: Maps feedback text to the most relevant document section IDs and determines the type of revision required.
    module: app.tools.tool_wrappers.feedback_mapper
    class: Tool
    schema:
      type: object
      properties:
        feedback_text: { type: string }
        artifact: { type: string }
        project_id: { type: string }
      required:
        - feedback_text

  section_rewriter:
    description: Rewrites a section based on the revision type and feedback using prompt templates and LLM output.
    module: app.tools.tool_wrappers.section_rewriter
    class: Tool
    schema:
      type: object
      properties:
        section_id: { type: string }
        feedback: { type: string }
        revision_type: { type: string }
        current_text: { type: string }
      required:
        - section_id
        - feedback
        - revision_type
        - current_text

  manualEditSync:
    description: Saves a section that was edited manually or pasted by a user, without transformation.
    module: app.tools.tool_wrappers.manualEditSync
    class: Tool
    schema:
      type: object
      properties:
        section_id: { type: string }
        artifact: { type: string }
        gate_id: { type: string }
        text: { type: string }
      required:
        - section_id
        - text

  feedback_preprocessor:
    description: Cleans and normalizes feedback text, and optionally splits into smaller actionable feedback items.
    module: app.tools.tool_wrappers.feedback_preprocessor
    class: Tool
    schema:
      type: object
      properties:
        feedback_text: { type: string }
      required:
        - feedback_text

  revision_checker:
    description: Compares original and revised section content to detect excessive or unintended changes based on revision type.
    module: app.tools.tool_wrappers.revision_checker
    class: Tool
    schema:
      type: object
      properties:
        original_text: { type: string }
        revised_text: { type: string }
        revision_type: { type: string }
      required:
        - original_text
        - revised_text
        - revision_type

  refine_document_chain:
    description: Refines and polishes a full assembled document using LLM-based strategies, preserving quality and fidelity while respecting token limits.
    module: app.tools.tool_wrappers.refine_document_chain
    class: Tool
    schema:
      type: object
      properties:
        document_text: { type: string }
        artifact_id: { type: string }
        project_id: { type: string }
        user_id: { type: string }
        section_ids: 
          type: array
          items: { type: string }
      required:
        - document_text
        - artifact_id
        - project_id
        - user_id
        - section_ids

  generate_full_artifact_chain:
    description: Generates an entire artifact by sequentially executing section-level generation and final document refinement.
    module: app.engines.toolchains.generate_full_artifact_chain
    class: GenerateFullArtifactChain
    schema:
      type: object
      properties:
        artifact_id: { type: string }
        project_id: { type: string }
        user_id: { type: string }
      required:
        - artifact_id
        - project_id
        - user_id

  query_prompt_generator:
    description: Generates concise, rich search queries from project context and memory to guide retrieval from corpuses and external data.
    module: app.tools.tool_wrappers.query_prompt_generator
    class: Tool
    schema:
      type: object
      properties:
        project_profile: { type: object }
        memory:
          type: array
          items: { type: object }
      required:
        - project_profile
        - memory

  section_synthesizer:
    description: Synthesizes a first draft of a policy section using memory, profile, web insights, and strategic alignments.
    module: app.tools.tool_wrappers.section_synthesizer
    class: Tool
    schema:
      type: object
      properties:
        memory: 
          type: array
          items: { type: object }
        alignment_results:
          type: array
          items: { type: object }
        web_search: { type: string }
        corpus_answer: { type: object }
        project_profile: { type: object }
        artifact: { type: string }
        section: { type: string }
      required:
        - memory
        - artifact
        - section

  section_refiner:
    description: Refines a drafted policy section for tone, clarity, and professionalism using LLM-based polishing.
    module: app.tools.tool_wrappers.section_refiner
    class: Tool
    schema:
      type: object
      properties:
        raw_draft: { type: string }
      required:
        - raw_draft

  generate_artifact_chain:
    description: Generates all sections for an artifact using shared global context, then assembles into a complete document.
    module: app.engines.toolchains.generate_artifact_chain
    class: GenerateArtifactChain
    schema:
      type: object
      properties:
        gate_id: { type: integer }
        artifact: { type: string }
        session_id: { type: string }
        user_id: { type: string }
        project_id: { type: string }
      required:
        - gate_id
        - artifact
        - session_id
        - user_id
        - project_id

  generate_global_context_chain:
    description: Runs global research using corpus search, web search, and GoC alignment tools, logging results for downstream use.
    module: app.engines.toolchains.generate_global_context_chain
    class: GenerateGlobalContextChain
    schema:
      type: object
      properties:
        session_id: { type: string }
        user_id: { type: string }
        project_id: { type: string }
        artifact_id: { type: string }
        search_filter:
          type: object
          description: Optional filters for tailoring web search (e.g., jurisdiction, topics)
      required:
        - session_id
        - user_id
        - project_id
        - artifact_id

  fetch_artifact_chunk:
    description: Fetch a specific chunk of an artifact from Redis storage for streaming to the user or GPT.
    module: app.tools.tool_wrappers.fetchArtifactChunk
    class: Tool
    schema:
      type: object
      properties:
        session_id: { type: string }
        artifact_id: { type: string }
        chunk_id: { type: string }
      required:
        - session_id
        - artifact_id
        - chunk_id

  save_artifact_chunks:
    description: Chunk and save a drafted artifact to Redis using token thresholds for LLM-safe streaming.
    module: app.tools.tool_wrappers.saveArtifactChunks
    class: Tool
    schema:
      type: object
      properties:
        session_id: { type: string }
        artifact_id: { type: string }
        gate_id: { type: string }
        max_token:
          type: integer
          default: 1500
          description: Optional override for the max token size per chunk.
      required:
        - session_id
        - artifact_id
        - gate_id

  diff_summarizer:
    description: Generate a natural language summary of the difference between an original and revised text.
    module: app.tools.tool_wrappers.diff_summarizer
    class: Tool
    schema:
      type: object
      properties:
        original: { type: string }
        revised: { type: string }
      required:
        - original
        - revised

  submitFeedback:
    description: Revise one or more artifact sections based on user feedback, memory context, and structured feedback mapping.
    module: app.engines.toolchains.revise_section_chain
    class: ReviseSectionChain
    schema:
      type: object
      properties:
        session_id: { type: string }
        artifact_id: { type: string }
        gate_id: { type: string }
        user_id: { type: string }
        project_id: { type: string }
        feedback_entries:
          type: array
          description: Array of user feedback entries to revise sections
          items:
            type: object
            properties:
              text: { type: string }
              section_id: { type: string }
              type: { type: string }
      required:
        - session_id
        - artifact
        - feedback_entries
        - user_id
        - project_id

  getLatestSection:
    description: Retrieve the latest revision for a section including updated draft and diff summary.
    module: app.tools.tool_wrappers.section_review_fetcher
    class: Tool
    schema:
      type: object
      properties:
        session_id: { type: string }
        project_id: { type: string }
        artifact_id: { type: string }
        section_id: { type: string }
      required:
        - session_id
        - project_id
        - artifact_id
        - section_id

  feedback_structurer:
    description: Structure and map multiple user feedback entries to appropriate sections and revision types.
    module: app.tools.tool_wrappers.feedback_structurer
    class: Tool
    schema:
      type: object
      properties:
        feedback_entries:
          type: array
          items:
            type: string
        sections:
          type: array
          items:
            type: object
            properties:
              section_id: { type: string }
              text: { type: string }
      required:
        - feedback_entries
        - sections

  record_research:
    description: Record free-form research notes (with optional metadata) and structure them for global context reuse.
    module: app.tools.tool_wrappers.record_research
    class: Tool
    schema:
      type: object
      properties:
        session_id: { type: string }
        project_id: { type: string }
        user_id: { type: string }
        notes: { type: string, description: "Free-form research notes" }
        metadatas:
          type: array
          items:
            type: object
            properties:
              text: { type: string }
              title: { type: string }
              source: { type: string }
              date: { type: string }
              url: { type: string }
              citation: { type: string }
          description: "Optional pre-structured metadata if available"
      required: ["session_id", "project_id", "notes"]

  listReferenceDocuments:
    module: app.tools.tool_wrappers.listCorpus
    class: Tool
    description: Lists all reference documents currently stored in the vector database
    GPT_facing: true
    schema:
      type: object
      properties: {}
      additionalProperties: false

  reviewInputSnapshot:
    description: Generate a human-readable summary of all user inputs uploaded during the current session.
    module: app.engines.toolchains.reviewInputSnapshot
    class: Tool
    schema:
      type: object
      properties:
        session_id: { type: string }
        project_id: { type: string }
      required:
        - session_id
        - project_id

  reviseSectionDraft:
    description: Applies feedback to a drafted section, rewrites it, or accepts verbatim edits.
    module: app.tools.tool_wrappers.section_review_feedback
    class: Tool
    schema:
      type: object
      properties:
        section_id:
          type: string
        artifact_id:
          type: string
        project_id:
          type: string
        session_id:
          type: string
        feedback:
          type: string
        revision_type:
          type: string
          enum: ["rewrite", "polish", "append", "clarify", "targeted_edit"]
        verbatim_text:
          type: string
        diff_summary:
          type: string
      required: [section_id, artifact_id, project_id, session_id]
