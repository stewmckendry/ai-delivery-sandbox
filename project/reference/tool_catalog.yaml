tools:
  compose_and_cite:
    module: app.tools.tool_wrappers.compose_and_cite
    class: Tool
    description: Orchestrates evidence search → synthesis → draft → validate
    schema:
      prompt:
        type: string
      gate_id:
        type: integer
  searchKnowledgeBase:
    module: app.tools.tool_wrappers.searchKnowledgeBase
    class: Tool
    description: Retrieves semantic matches from embedded documents
    schema:
      query:
        type: string
  externalWebSearch:
    module: app.tools.tool_wrappers.externalWebSearch
    class: Tool
    description: Pulls evidence from trusted web sources
    schema:
      query:
        type: string
  composeDraft:
    module: app.tools.tool_wrappers.composeDraft
    class: Tool
    description: Generates structured markdown from YAML + evidence
    schema:
      yaml_input:
        type: string
  validateSection:
    module: app.tools.tool_wrappers.validateSection
    class: Tool
    description: Validates required fields and logic structure
    schema:
      section_yaml:
        type: string
  logReasoningTrace:
    module: app.tools.tool_wrappers.logReasoningTrace
    class: Tool
    description: Stores reasoning trace for each toolchain run
    schema:
      trace_yaml:
        type: string
  commitSection:
    module: app.tools.tool_wrappers.commitSection
    class: Tool
    description: Saves validated section to Drive and DB
    schema:
      section_id:
        type: string
      author:
        type: string
      content:
        type: string
  commitDocument:
    module: app.tools.tool_wrappers.commitDocument
    class: Tool
    description: Assembles and stores full artifact
    schema:
      doc_id:
        type: string
  fetchDocument:
    module: app.tools.tool_wrappers.fetchDocument
    class: Tool
    description: Retrieves section or full document
    schema:
      doc_id:
        type: string
      section_id:
        type: string
  getTokenUsage:
    module: app.tools.tool_wrappers.getTokenUsage
    class: Tool
    description: Tracks GPT session size and overflow risk
    schema:
      session_id:
        type: string
  translateDocument:
    module: app.tools.tool_wrappers.translateDocument
    class: Tool
    description: Converts document language (EN ⇆ FR)
    schema:
      doc_id:
        type: string
      target_lang:
        type: string
        enum: ["en", "fr"]
  queryAirtable:
    module: app.tools.tool_wrappers.queryAirtable
    class: Tool
    description: Looks up structured reference mappings
    schema:
      table:
        type: string
      filter:
        type: string
  parseTranscript:
    module: app.tools.tool_wrappers.parseTranscript
    class: Tool
    description: Converts transcripts to YAML insights
    schema:
      transcript_text:
        type: string
  doc_feedback_to_task:
    module: app.tools.tool_wrappers.doc_feedback_to_task
    class: Tool
    description: Converts feedback into new planner tasks
    schema:
      feedback_log:
        type: string
  diff_and_summarize_sections:
    module: app.tools.tool_wrappers.diff_and_summarize_sections
    class: Tool
    description: Computes section diffs and summarizes changes
    schema:
      original:
        type: string
      revised:
        type: string
  submitDocumentFeedback:
    module: app.tools.tool_wrappers.submitDocumentFeedback
    class: Tool
    description: Captures user feedback on drafts
    schema:
      doc_id:
        type: string
      user:
        type: string
      feedback:
        type: string
  summarize_feedback_log:
    module: app.tools.tool_wrappers.summarize_feedback_log
    class: Tool
    description: Synthesizes feedback entries into summary
    schema:
      feedback_log:
        type: string
  uploadTextInput:
    description: Ingest freeform text input into the memory system
    module: app.tools.tool_wrappers.uploadTextInput
    class: Tool
    schema:
      type: object
      properties:
        text:
          type: string
        metadata:
          type: object
          properties:
            gate_id:
              type: integer
            artifact_id:
              type: string
            section_id:
              type: string
            intent:
              type: string
            session_id:
              type: string
            user_id:
              type: string
        log_usage:
          type: boolean
          description: Optional. If false, tool usage logging will be skipped (used when chained).
      required:
        - text
  uploadFileInput:
    description: Extract and ingest file contents into the memory system
    module: app.tools.tool_wrappers.uploadFileInput
    class: Tool
    schema:
      type: object
      properties:
        file_path:
          type: string
        file_content:
          type: string
        metadata:
          type: object
          properties:
            gate_id:
              type: integer
            artifact_id:
              type: string
            section_id:
              type: string
            intent:
              type: string
            session_id:
              type: string
            user_id:
              type: string
        log_usage:
          type: boolean
          description: Optional. If false, tool usage logging will be skipped (used when chained).
      anyOf:
        - required: ["file_path"]
        - required: ["file_content"]
  uploadLinkInput:
    description: Scrape and ingest webpage content into the memory system
    module: app.tools.tool_wrappers.uploadLinkInput
    class: Tool
    schema:
      type: object
      properties:
        url:
          type: string
        metadata:
          type: object
          properties:
            gate_id:
              type: integer
            artifact_id:
              type: string
            section_id:
              type: string
            intent:
              type: string
            session_id:
              type: string
            user_id:
              type: string
        log_usage:
          type: boolean
          description: Optional. If false, tool usage logging will be skipped (used when chained).
      required:
        - url
  loadCorpus:
    module: app.tools.tool_wrappers.loadCorpus
    class: Tool
    description: Embeds and indexes documents into KB
    schema:
      type: object
      properties:
        file_contents:
          type: string
        file_name:
          type: string
        metadata:
          type: object
          additionalProperties: true # Allow any metadata structure
          properties:
            gate_id:
              type: integer
            artifact_id:
              type: string
            section_id:
              type: string
            intent:
              type: string
            session_id:
              type: string
            user_id:
              type: string
      required:
        - file_contents  
  queryCorpus:
    module: app.tools.tool_wrappers.queryCorpus
    class: Tool
    description: Queries a vector-embedded document corpus for alignment
    schema:
      type: object
      properties:
        query:
          type: string
      required:
        - query
  createSessionSnapshot:
    description: Generate a YAML snapshot of all PromptLog entries for a session, used by planner for grounding and replay.
    module: app.tools.tool_wrappers.createSessionSnapshot
    class: Tool
    schema:
      type: object
      properties:
        session_id:
          type: string
          description: Optional session ID to filter which prompt logs to include
      required: []
  inputPromptGenerator:
    description: Generate structured input prompts based on gate metadata
    module: app.tools.tool_wrappers.inputPromptGenerator
    class: Tool
    schema:
      type: object
      properties:
        gate_id:
          type: integer
        artifact_id:
          type: string
        section_id:
          type: string
      required:
        - gate_id
        - artifact_id
  inputChecker:
    description: Validate user inputs against required metadata and completeness
    module: app.tools.tool_wrappers.inputChecker
    class: Tool
    schema:
      type: object
      properties:
        gate_id:
          type: integer
        artifact_id:
          type: string
        section_id:
          type: string
      required:
        - gate_id
        - artifact_id
        - section_id
  memory_retrieve:
    module: app.tools.tool_wrappers.memory_retrieve
    class: Tool
    description: Retrieves relevant PromptLog entries for a given artifact and section
    schema:
      type: object
      properties:
        artifact:
          type: string
        section:
          type: string
        session_id:
          type: string
        user_id:
          type: string
      required:
        - artifact
        - section
  section_synthesizer:
    module: app.tools.tool_wrappers.section_synthesizer
    class: Tool
    description: Drafts a section using OpenAI from retrieved memory entries
    schema:
      type: object
      properties:
        memory:
          type: array
          items:
            type: object
            properties:
              input_summary:
                type: string
              full_input_path:
                type: string
              timestamp:
                type: string
      required:
        - memory
  section_refiner:
    module: app.tools.tool_wrappers.section_refiner
    class: Tool
    description: Refines section draft for tone, clarity, grammar using OpenAI
    schema:
      type: object
      properties:
        raw_draft:
          type: string
      required:
        - raw_draft
  loadSectionMetadata:
    module: app.tools.tool_wrappers.loadSectionMetadata
    class: Tool
    description: Loads and sorts drafted artifact sections for a given gate and artifact
    schema:
      type: object
      properties:
        artifact_id:
          type: string
        gate_id:
          type: string
      required:
        - artifact_id
        - gate_id
  formatSection:
    module: app.tools.tool_wrappers.formatSection
    class: Tool
    description: Formats a section using a Jinja Markdown template
    schema:
      type: object
      properties:
        section_id:
          type: string
        section_text:
          type: string
        template_url:
          type: string
      required:
        - section_id
        - section_text
        - template_url
  mergeSections:
    module: app.tools.tool_wrappers.mergeSections
    class: Tool
    description: Merges formatted sections into a complete markdown body
    schema:
      type: object
      properties:
        sections:
          type: array
          items:
            type: string
      required:
        - sections
  finalizeDocument:
    module: app.tools.tool_wrappers.finalizeDocument
    class: Tool
    description: Adds title, metadata, and table of contents to a markdown document
    schema:
      type: object
      properties:
        title:
          type: string
        document_body:
          type: string
        version:
          type: string
        artifact_id:
          type: string
        gate_id:
          type: string
      required:
        - title
        - document_body
        - version
        - artifact_id
        - gate_id
  commitArtifact:
    module: app.tools.tool_wrappers.commitArtifact
    class: Tool
    description: Saves finalized document locally and logs output location
    schema:
      type: object
      properties:
        final_markdown:
          type: string
        artifact_id:
          type: string
        gate_id:
          type: string
        version:
          type: string
        title:
          type: string
      required:
        - final_markdown
        - artifact_id
        - gate_id
        - version
        - title
  storeToDrive:
    module: app.tools.tool_wrappers.storeToDrive
    class: Tool
    description: Uploads finalized document as PDF to Google Drive and logs the output link
    schema:
      type: object
      properties:
        final_markdown:
          type: string
        artifact_id:
          type: string
        gate_id:
          type: string
        version:
          type: string
        title:
          type: string
      required:
        - final_markdown
        - artifact_id
        - gate_id
        - version
        - title
  fetchFromDrive:
    module: app.tools.tool_wrappers.fetchFromDrive
    class: Tool
    description: Retrieves the uploaded PDF from Drive by gate ID, artifact ID, and version
    schema:
      type: object
      properties:
        artifact_id:
          type: string
        gate_id:
          type: string
        version:
          type: string
      required:
        - artifact_id
        - gate_id
        - version
  confirmProjectProfile:
    module: app.tools.tool_wrappers.confirmProjectProfile
    class: Tool
    description: Loads and returns a saved project profile by project ID for GPT or human confirmation
    schema:
      type: object
      properties:
        project_id:
          type: string
      required:
        - project_id
  ingestInput:
    description: Ingests content from user text, file, or URL and generates or updates the associated project profile.
    module: app.engines.toolchains.IngestInputChain
    class: IngestInputChain
    schema:
      type: object
      properties:
        input_method:
          type: string
          enum: [text, file, link]
          description: Indicates which upload method to use
        text:
          type: string
          description: Used if input_method is 'text'
        file_path:
          type: string
          description: Path to file if input_method is 'file'
        file_content:
          type: string
          description: Alternative to file_path if uploading raw content
        url:
          type: string
          description: Used if input_method is 'link'
        metadata:
          type: object
          properties:
            gate_id:
              type: integer
            artifact_id:
              type: string
            section_id:
              type: string
            intent:
              type: string
            session_id:
              type: string
            user_id:
              type: string
            project_id:
              type: string
          required:
            - artifact_id
      required:
        - input_method
        - metadata
      oneOf:
        - required: [text]
        - required: [file_path]
        - required: [file_content]
        - required: [url]
  generateSectionChain:
    description: Generates a draft section by retrieving memory, synthesizing, and refining text.
    module: app.engines.toolchains.generate_section_chain
    class: GenerateSectionChain
    schema:
      type: object
      properties:
        artifact: { type: string }
        section: { type: string }
        gate_id: { type: string }
        session_id: { type: string }
        user_id: { type: string }
        project_id: { type: string }
      required:
        - artifact
        - section
  webSearch:
    module: app.tools.tool_wrappers.web_search
    class: Tool
    description: Performs external web or domain-specific search and returns formatted summaries
    schema:
      type: object
      properties:
        query:
          type: string
        search_type:
          type: string
        context:
          type: object
      required:
        - query
        - search_type
  goc_alignment_search:
    module: app.tools.tool_wrappers.goc_alignment_search
    class: Tool
    description: Performs government policy alignment search scoped to .gc.ca domains and returns structured results
    schema:
      type: object
      properties:
        query:
          type: string
        context:
          type: object
      required:
        - query
  assembleArtifactChain:
    description: Loads section metadata, formats and merges content, finalizes a document, and saves it to Drive.
    module: app.engines.toolchains.assemble_artifact_chain
    class: AssembleArtifactChain
    schema:
      type: object
      properties:
        artifact_id: { type: string }
        gate_id: { type: string }
        version: { type: string }
        project_id: { type: string }
      required:
        - artifact_id
        - gate_id
