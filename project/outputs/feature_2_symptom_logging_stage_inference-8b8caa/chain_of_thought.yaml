- message: Committed design spec for Feature 2. Defined tools `symptom_logger` and
    `get_stage_guidance`, their schemas, flow context, and DB schema references. This
    connects symptoms.yaml inputs to tracker state and recovery stage output via the
    existing stage_engine. Ready to build schema models next.
  timestamp: '2025-05-09T18:08:23.904099'
  tags:
  - design
  - symptom_logging
  - stage_inference
- message: Defined and committed `models/symptoms.py` with schemas for check-ins and
    stage inference tools. Added a design addendum explaining how symptoms.yaml metadata
    is used to validate and enrich symptom check-ins (e.g. guidance, risk flags).
    This supports extensible tooling and structured user feedback.
  timestamp: '2025-05-09T18:15:59.117038'
  tags:
  - schemas
  - metadata
  - validation
  - symptom_yaml
- message: Added get_stage_guidance.py which infers recovery stage using stage_engine.
    Also committed tool_contracts_notes.md to document how we communicate input format
    to Custom GPTs to ensure schema alignment. This guards against bad payloads and
    enables smoother tool calls.
  timestamp: '2025-05-09T18:29:33.450503'
  tags:
  - tool_contracts
  - gpt_alignment
  - stage_guidance
- message: Captured that symptom scoring (e.g., weighted, categorized) is currently
    a sum of symptom values but should be enhanced in Feature Area 5. Updated task
    list to mark this for future work. Preparing to implement extended TrackerState
    schema next.
  timestamp: '2025-05-09T19:11:35.738609'
  tags:
  - symptom_scoring
  - tracker_schema
  - future_enhancement
- message: Committed TrackerState model defining user_id, injury_date, checkin_time,
    symptom answers, and clearance flags. Reinforces the need to explicitly guide
    Custom GPTs with OpenAPI schemas and tool prompts to ensure all fields are populated
    in correct structure.
  timestamp: '2025-05-09T19:18:58.885398'
  tags:
  - tracker_state
  - schema
  - gpt_input_guidance
- message: Committed master feature_scope_tracker.md to track scope, additions, and
    deferrals across all 9 feature areas. This will serve as the persistent source
    of truth for planning. Also updated Feature 2 task list with DB schema and scope
    tracker completion.
  timestamp: '2025-05-09T19:52:44.433172'
  tags:
  - scope_tracking
  - multi_feature
  - completion_log
