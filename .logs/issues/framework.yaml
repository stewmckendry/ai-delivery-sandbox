- type: bug
  scope: framework
  issue_id: 3a4309d6-ce0f-4d75-a903-e0cbee4cc913
  task_id: null
  title: YAML grounding file committed with incorrect or missing content
  detail: During task 1.5_research_spikes, the YAML grounding file at project/inputs/knowledgebooks/youth_career_guide.yaml
    was committed without actual YAML content. This caused downstream issues when
    ProductPod attempted to use the data.
  suggested_fix: Enhance commit verification to validate content structure before
    committing YAML. Add a pre-commit YAML schema lint or basic presence check for
    key root elements like 'careers:'.
  tags:
  - yaml
  - commit-check
  - data-integrity
  - grounding
  status: open
  timestamp: '2025-05-03T01:23:32.108511'
- type: bug
  scope: framework
  issue_id: ccd0a708-97f0-4ea5-8270-51e78cbfbc4e
  task_id: null
  title: Monolithic YAML commit fails silently due to content size or overwrite behavior
  detail: During task 1.5_research_spikes, a full YAML file with 50+ structured career
    entries failed to commit properly. The system either truncated or overwrote the
    YAML on each commit attempt without appending, leading to data loss.
  suggested_fix: Introduce content size checks or enforce segmentation when committing
    structured data. Consider appending-only logic or YAML merge helpers for large
    grounding files.
  tags:
  - yaml
  - tool-limit
  - commit-behavior
  - data-loss
  status: open
  timestamp: '2025-05-03T01:33:25.059353'
- type: bug
  scope: framework
  issue_id: 10d4cb12-c944-47af-8d89-ddcda6b65f13
  task_id: null
  title: Task completion tool overwrites committed files when 'outputs' includes simplified
    content
  detail: When calling manageTaskLifecycle.complete with 'outputs', any 'content'
    field will overwrite the actual file contents in Git, even if those files were
    previously committed through iteration. This led to a full loss of work, later
    restored via manual git reset.
  suggested_fix: Either (1) prevent overwrites unless explicitly allowed, or (2) remove
    'content' from outputs and rely only on file references. Separate file commits
    and completions by design.
  tags:
  - file-safety
  - task-completion
  - critical
  - workflow
  status: open
  timestamp: '2025-05-04T01:06:40.461899'
- type: enhancement
  scope: framework
  issue_id: edb5b608-c16c-4c6c-a159-7e2202352f7b
  task_id: null
  title: Support wildcards in file references for task inputs and handoffs
  detail: Task inputs and kickoff messages often require long lists of reference files
    (e.g., all YAML segments, all architecture docs). Supporting wildcard patterns
    like './docs/architecture/*.md' would simplify references and reduce errors.
  suggested_fix: Enable wildcard/glob matching in file path references for task metadata
    and prompts.
  tags:
  - file-reference
  - task-metadata
  - enhancement
  status: open
  timestamp: '2025-05-04T01:24:37.509385'
- type: enhancement
  scope: framework
  issue_id: 2166062c-ff5e-4daf-b0e0-25da44b9be4e
  task_id: null
  title: Enable reasoning trace creation outside of complete task flow
  detail: "Currently, reasoning traces are only created during the `complete` task\
    \ flow. There\u2019s no way to log or patch a trace afterward if it was missed.\
    \ This limits auditability and team reflection."
  suggested_fix: Add a `create_trace` or `log_trace` action under the reasoning trace
    tool. Should support appending reasoning trace metadata and content for a task
    ID without triggering full task completion.
  tags:
  - enhancement
  - reasoning-trace
  - auditability
  - task-metadata
  status: open
  timestamp: '2025-05-05T17:18:04.608640'
- type: enhancement
  scope: framework
  issue_id: 2fd6d6c3-d329-41bb-91d7-305613f54a75
  task_id: null
  title: Improve support for long-running chat-based pods
  detail: This ProductPod executed a full MVP build within a single chat thread. Over
    time, file update context was lost, and token limits caused partial state errors.
  suggested_fix: '- Introduce a persistent context cache for active files

    - Auto-reload canvas state before every commit

    - Introduce an optional ''confirm and patch'' mode for longer sessions

    - Provide guidance when approaching token limit

    '
  tags:
  - enhancement
  - chat-flow
  - context
  - state-recovery
  status: open
  timestamp: '2025-05-06T14:17:38.577683'
- type: enhancement
  scope: framework
  issue_id: 3dd92085-7086-4dc3-aaa5-c30e6f5ee67e
  task_id: null
  title: Default commit target should match working task branch
  detail: During prompt creation, an accidental commit to 'main' occurred due to missing
    explicit branch parameter. The commit tools currently default to 'main' if unspecified.
  suggested_fix: Enhance commit functions to auto-target the task's working branch
    unless overridden.
  tags:
  - commit
  - branching
  - tooling
  status: open
  timestamp: '2025-05-06T14:18:08.953731'
- type: enhancement
  scope: framework
  issue_id: 9aaf95fd-ded3-4cb4-b534-7be910fc3a42
  task_id: null
  title: 'Prompt development UX: preview and linting tools'
  detail: PromptPod created 10 structured prompts manually. While effective, workflow
    could improve with integrated previewer and schema linting tool during authoring.
  suggested_fix: Provide a local preview tool (e.g., render intro + sample Q&A), and
    validate JSON schema compliance pre-commit.
  tags:
  - prompt
  - tooling
  - preview
  - validation
  status: open
  timestamp: '2025-05-06T14:18:20.596637'
