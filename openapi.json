{
  "openapi": "3.1.0",
  "info": {
    "title": "GovDoc Copilot: PM Edition",
    "version": "1.0.0",
    "description": "Your AI copilot for preparing government project gate submissions. Guides PMs through drafting, reviewing, and finalizing project documentation."
  },
  "servers": [
    {
      "url": "https://robust-adventure-production.up.railway.app",
      "description": "Production server"
    }
  ],
  "security": [
    { "bearerAuth": [] }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {}  
  },
  "paths": { 
    "/tools": {
      "get": {
        "operationId": "listGPTFacingTools",
        "summary": "List available tools for GPT use",
        "tags": ["Tool Discovery"],
        "x-gpt-action": {
          "name": "List Available Tools",
          "instructions": "Call this to get a list of tools that are available for use in this assistant. Only tools marked as GPT-facing will be returned.",
          "summary_keywords": ["list", "tools", "catalog", "discovery"]
        },
        "responses": {
          "200": {
            "description": "Returns an array of tool metadata including tool_id, description, and schema if applicable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tool_id": { "type": "string", "example": "getArtifactRequirements" },
                      "description": { "type": "string", "example": "Retrieve required sections and criteria for an artifact" },
                      "schema": { "type": "object" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tools/getArtifactRequirements": {
      "post": {
        "operationId": "getArtifactRequirements",
        "summary": "Retrieve artifact options and requirements for a gate",
        "tags": ["Input Prep"],
        "x-gpt-action": {
          "name": "Get Artifact Requirements",
          "instructions": "Use this when a user is starting a new artifact. Ask which gate they are preparing for (0–5). Pass:\n- `gate_id`: integer (see values below)\n\nThis returns:\n- A user-facing instruction message\n- A list of available artifacts for that gate, including section structure and evaluation criteria.\n\nYou should:\n1. Present the list of artifacts to the user\n2. Ask them to pick one\n3. Use the section metadata to guide the drafting process",
          "summary_keywords": ["prompt", "generate", "section guidance"]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gate_id": {
                    "type": "integer",
                    "enum": [0, 1, 2, 3, 4, 5],
                    "description": "Which gate the user is preparing for.\n- 0: Gate 0 – Verify Business Problem or Opportunity (Pre-Project)\n- 1: Gate 1 – Validate Business Justification and Select Short List of Options\n- 2: Gate 2 – Approve Preferred Option and Approach\n- 3: Gate 3 – Fund Project Deliverables (Project Approval)\n- 4: Gate 4 – Confirm Readiness for Service (Pre-Implementation)\n- 5: Gate 5 – Complete Project and Post-Implementation Review (Close-Out)",
                    "example": 3
                  }
                },
                "required": ["gate_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an instruction message and list of artifacts with section guidance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instructions": {
                      "type": "string",
                      "description": "Message for GPT on how to use the returned data"
                    },
                    "artifacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Each item is a section intent with metadata"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tools/uploadReferenceDocument": {
      "post": {
        "operationId": "uploadReferenceDocument",
        "summary": "Embed and index external policy or strategy documents for use in generation",
        "tags": ["Input Prep"],
        "x-gpt-action": {
          "name": "Upload Reference Corpus",
          "instructions": "Use this when the user uploads foundational docs (e.g. policies, strategies, standards) that need to be embedded and available for alignment.\nFields:\n- `file_contents`: full text of the document\n- `file_name`: string (e.g. 'Digital Standards 2024')\n- `metadata`: object with `title`, `source`, `date` (ISO format)",
          "summary_keywords": ["corpus", "embed", "reference", "index"]
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file_contents": {
                    "type": "string",
                    "description": "Full document text",
                    "example": "Digital services must be accessible and user-centered..."
                  },
                  "file_name": {
                    "type": "string",
                    "description": "Internal name for uploaded document",
                    "example": "digital_standards_2024.txt"
                  },
                  "file_url": {
                    "type": "string",
                    "description": "Optional URL to the file if not provided as raw content",
                    "example": "https://example.com/digital_standards_2024.txt"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "title": { "type": "string", "example": "Digital Standards 2024" },
                      "source": { "type": "string", "example": "Treasury Board Secretariat" },
                      "date": { "type": "string", "format": "date", "example": "2024-01-15" }
                    },
                    "required": ["title", "source", "date"]
                  }
                },
                "required": ["file_contents", "file_name", "metadata"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document embedded and indexed successfully"
          }
        }
      }
    }

  }
}